microservice-chart:
  namespace: 'payments'

  image:
    repository: 'iopcommonacr.azurecr.io/io-pagopa-payment-updater-ms'
    tag: 'latest'
    pullPolicy: Always

  livenessProbe:
    httpGet:
      path: '/api/v1/health/live'
      port: 9090
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: '/api/v1/health/ready'
      port: 9090
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10

  service:
    create: true
    port: 9090

  ingress:
    create: true
    host: 'weubeta.payments.internal.io.pagopa.it'
    path: '/(api/v1/payment/.*)'

  resources:
    requests:
      memory: '256Mi'
      cpu: '50m'
    limits:
      memory: '512Mi'
      cpu: '300m'

  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 10
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: '60'

  envConfig:
    # required
    WEBSITE_SITE_NAME: 'io-p-weubeta-pagopa-payment-updater-ms' # required to show cloud role name in application insights
    # app specific
    BOOTSTRAP_SERVER_MESSAGE: 'io-p-messages-weu-prod01-evh-ns.servicebus.windows.net:9093' # event-hub write by fn-messages-cqrs
    BOOTSTRAP_SERVER_PAYMENT: 'pagopa-d-evh-ns01.servicebus.windows.net:9093' # event-hub pagopa
    BOOTSTRAP_SERVER_PAYMENTUPDATES: 'io-p-payments-weu-prod01-evh-ns.servicebus.windows.net:9093' # event-hub internal
    CHECKPOINT_SIZE: '10'
    KAFKA_MESSAGE: 'messages-payments' # event-hub write by fn-messages-cqrs
    KAFKA_PAYMENTS: 'nodo-dei-pagamenti-biz-evt' # event-hub pagopa
    KAFKA_PAYMENT_UPDATES: 'io-payment-updater' # event-hub internal
    MESSAGE_STATUS_ENDPOINT: '' # TODO not used, remove next days
    MONGO_DATABASE: 'db' # mongodb internal
    MONGO_COLLECTION_NAME: 'payment' # mongodb internal
    ENABLE_REST_KEY: 'true' # TODO not used, remove next days
    PROXY_ENDPOINT: 'https://api.uat.platform.pagopa.it/checkout/auth/payments/v1' # TODO not used, remove next days
    RESTCALL_INTERVAL_FUNCTION: '10000'
    RESTCALL_MAX_ATTEMPTS: '3'
    SASL_MECHANISM_PAYMENT: 'PLAIN'
    SECURITY_PROTOCOL_PAYMENT: 'SASL_SSL'
    SCHEDULER_RETRY_ACTIVE: 'true'
    RETRY_MAX_ATTEMPTS: '10'
    RETRY_INTERVAL_FUNCTION: '10000'
    QUARTZ_SCHEDULER_TIMER_NOTIFY: '0 /3 * ? * *'
    MONGO_RETRY_COLLECTION_NAME: 'payment-retry'

  envSecret:
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'appinsights-connection-string'
    # app specific
    KAFKA_URL_MESSAGE: 'messages-payments-io-p-messages-weu-prod01-evh-jaas-connection-string' # event-hub write by fn-messages-cqrs
    KAFKA_URL_PAYMENT: 'nodo-dei-pagamenti-biz-evt-pagopa-d-evh-ns01-evh-jaas-connection-string' # event-hub pagopa
    KAFKA_URL_PAYMENTUPDATES: 'io-payment-updater-io-payment-updater-weu-prod01-evh-jaas-connection-string' # event-hub internal
    MONGO_DATABASE_URI: 'mongodb-connection-string' # mongodb internal
    PROXY_ENDPOINT_SUBSCRIPTION_KEY: 'pagopa-proxy-uat-subscription-key' # TODO not used, remove next days

  keyvault:
    name: 'io-p-payments-kv'
    tenantId: '7788edaf-0346-4068-9d79-c868aed15b3d'
